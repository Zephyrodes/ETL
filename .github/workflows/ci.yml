name: ETL Pipeline - CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: 🧪 Test ETL Integrity

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            echo "Instalando dependencias desde requirements.txt..."
            pip install -r requirements.txt
          else
            echo "Instalando dependencias básicas..."
            pip install pytest boto3 pandas pyarrow holidays
          fi
          python -m pip install pytest

      - name: 🧪 Run unit tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          echo "Ejecutando pruebas unitarias..."
          python -m pytest tests/test_etldimdate.py -v

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    name: 🚀 Deploy ETL Script to S3

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 📦 Install AWS CLI
        run: |
          python -m pip install --upgrade pip
          pip install awscli

      - name: 🚀 Upload ETL script to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          echo "Subiendo ETL a S3..."
          aws s3 cp src/etldimdate.py s3://etlsakila/scripts/etldimdate.py --acl bucket-owner-full-control


  insert-factrental:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    name: 💾 Insert New fact_rental Record (via commit)

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 pandas pyarrow

      - name: 💬 Extract commit message
        id: get_commit
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "message=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: 💾 Run insertion if commit starts with 'insert'
        env:
          COMMIT_MESSAGE: ${{ steps.get_commit.outputs.message }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          if [[ "$COMMIT_MESSAGE" == insert* ]]; then
            echo "Commit detectado como inserción: $COMMIT_MESSAGE"
            python src/etlfactrental_insert.py "$COMMIT_MESSAGE"
          else
            echo "No es un commit de inserción. Nada que hacer."
          fi
